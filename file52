/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) 
    {
        if(head==NULL)
        {
            return head;
        }
        if(head->next==NULL)
        {
            return head;
        }
        if(head->next->next==NULL)
        {
            return head;
            
        }
        
        ListNode* start=head;
        ListNode* end=head;
        int count=0;
        
        while(end->next!=NULL)
        {
            end=end->next;
            count++;
        }
        count=(count&1)?(count/2+1):count/2;
        while(count--)
        {
            end->next=start->next;
            start->next=start->next->next;
            end->next->next=NULL;
            start=start->next;
            end=end->next;
        }
        return head;
        
        
    }
};
